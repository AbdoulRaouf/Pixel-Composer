// 2024-04-14 11:30:41
varying vec2 v_vTexcoord;	
varying vec4 v_vColour;

uniform int   drawLayer;
uniform int   eraser;
uniform vec4  channels;
uniform vec4  pickColor;
uniform float alpha;
uniform vec2  mirror;

uniform sampler2D back;
uniform sampler2D fore;

vec4 blend( in vec4 bgc, in vec4 fgc ) {
	vec4 _fgc = vec4(fgc);
	
	_fgc   *= channels;
	_fgc.a *= alpha;
	
	if(eraser == 1) {
		bgc -= _fgc;
		return bgc;
	}
	
	if(drawLayer == 1) {
		vec4 temp = _fgc;
		_fgc = bgc;
		bgc = temp;
	}
	
	if(drawLayer == 2) {
		if(bgc != pickColor) return bgc;
	}
	
	float al  = _fgc.a + bgc.a * (1. - _fgc.a);
	vec4 _res = ((_fgc * _fgc.a) + (bgc * bgc.a * (1. - _fgc.a))) / al;
	_res.a = al;
	
	return _res;
}

void main() {
	vec4 bc = texture2D( back, v_vTexcoord );
	vec4 fc = texture2D( fore, v_vTexcoord );
	
	vec4 res = blend(bc, fc);
	
	if(mirror.x == 1.) {
		vec2 pos = vec2( 1. - v_vTexcoord.x, v_vTexcoord.y );
		vec4 mfc = texture2D( fore, pos );
		
		res = blend(res, mfc);
	}
	
	if(mirror.y == 1.) {
		vec2 pos = vec2( v_vTexcoord.x, 1. - v_vTexcoord.y );
		vec4 mfc = texture2D( fore, pos );
		
		res = blend(res, mfc);
	}
	
	gl_FragColor = res;
}
